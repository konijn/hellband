# File: Makefile

# This makefile is meant for Termux
#
# It is meant for the following setup
# * Your git rep is located in ~/storage/Documents/git/hellband.
# * You have a folder called ~/hellband/ where the binary goes
# That's because you can have executables in the shared storage
# You can use either the following CC flag
#-DDEFAULT_PATH=\"~/git/hellband/lib/\"
# Or you can symlink from ~/hellband/lib to ~/storage/Documents/git/hellband/lib
# I suggest to use mc (pkg install mc) to make that work
# You will also need to
#pkg install clang
#pkg install ncurses-dev
#


#
# The "source" and "object" files.
#

SRCS = \
  z-util.c z-virt.c z-form.c z-rand.c z-term.c \
  variable.c tables.c util.c cave.c \
  object1.c object2.c monster1.c monster2.c \
  xtra1.c xtra2.c spells1.c spells2.c \
  melee1.c melee2.c save.c files.c \
  cmd1.c cmd2.c cmd3.c cmd4.c cmd5.c cmd6.c \
  store.c birth.c load.c \
  wizard1.c wizard2.c \
  generate.c dungeon.c init1.c init2.c \
  quest.c \
  main-gcu.c maid-x11.c main-x11.c main.c

OBJS = \
  z-util.o z-virt.o z-form.o z-rand.o z-term.o \
  variable.o tables.o util.o cave.o \
  object1.o object2.o monster1.o monster2.o \
  xtra1.o xtra2.o spells1.o spells2.o \
  melee1.o melee2.o save.o files.o \
  cmd1.o cmd2.o cmd3.o cmd4.o cmd5.o cmd6.o \
  store.o birth.o load.o \
  wizard1.o wizard2.o \
  generate.o dungeon.o init1.o init2.o \
  quest.o \
  main-gcu.o maid-x11.o main-x11.o main.o

#
# This is my compiler of choice, it seems to work most everywhere
# Modified by konijn, if you set CACHE as an environment variable it'll ccache
# This can be useful if you're working a lot on the header files.
#

CC = gcc
ifeq ($(CACHE),X)
  CC = ccache gcc
endif

##
## Variation -- compfile for Ternux
##Choose -O2 for distributed builds
##Choose -O0 for debug buils
##Remove -g -ggdb3 -v for distributed build, this is meant to debug
##
CFLAGS = -I~/../usr/include -Wall \
         -O0 -pedantic \
         -g -ggdb3 \
         -D"USE_GCU" -D"USE_NCURSES" -D"linux" -D"USE_CLANG" -std=c99 -DPRIVATE_USER_PATH=\"~/.angband\" -DUSE_PRIVATE_PATHS
LIBS = -L~/../usr/lib -lncurses

install: hellband
	cp hellband ~/hellband/
	chmod +x ~/hellband/hellband

#
# Build the "Angband" program
#

hellband: $(OBJS)
	$(CC) $(CFLAGS) -o hellband $(OBJS) $(LDFLAGS) $(LIBS)


#
# Clean up old junk
#

clean:
	\rm *.o


#
# Generate dependancies automatically
#

depend:
	makedepend -D__MAKEDEPEND__ $(SRCS)


#
# Hack -- some file dependencies
#

HDRS = \
  h-basic.h \
  h-define.h h-type.h h-system.h h-config.h

INCS = \
  angband.h \
  config.h defines.h types.h externs.h \
  z-term.h z-rand.h z-util.h z-virt.h z-form.h $(HDRS)


birth.o: birth.c $(INCS)
cave.o: cave.c $(INCS)
cmd1.o: cmd1.c $(INCS)
cmd2.o: cmd2.c $(INCS)
cmd3.o: cmd3.c $(INCS)
cmd4.o: cmd4.c $(INCS)
cmd5.o: cmd5.c $(INCS)
cmd6.o: cmd6.c $(INCS)
dungeon.o: dungeon.c $(INCS)
files.o: files.c $(INCS)
generate.o: generate.c $(INCS)
init1.o: init1.c $(INCS)
init2.o: init2.c $(INCS)
load.o: load.c $(INCS)
main-gcu.o: main-gcu.c $(INCS)
main-x11.o: main-x11.c $(INCS)
main.o: main.c $(INCS)
melee1.o: melee1.c $(INCS)
melee2.o: melee2.c $(INCS)
monster1.o: monster1.c $(INCS)
monster2.o: monster2.c $(INCS)
object1.o: object1.c $(INCS)
object2.o: object2.c $(INCS)
quest.o: quest.c $(INCS)
save.o: save.c $(INCS)
spells1.o: spells1.c $(INCS)
spells2.o: spells2.c $(INCS)
store.o: store.c $(INCS)
tables.o: tables.c $(INCS)
util.o: util.c $(INCS)
variable.o: variable.c $(INCS)
wizard1.o: wizard1.c $(INCS)
wizard2.o: wizard2.c $(INCS)
xtra1.o: xtra1.c $(INCS)
xtra2.o: xtra2.c $(INCS)
z-form.o: z-form.c $(HDRS) z-form.h z-util.h z-virt.h
z-rand.o: z-rand.c $(HDRS) z-rand.h
z-term.o: z-term.c $(HDRS) z-term.h z-virt.h
z-util.o: z-util.c $(HDRS) z-util.h
z-virt.o: z-virt.c $(HDRS) z-virt.h z-util.h

